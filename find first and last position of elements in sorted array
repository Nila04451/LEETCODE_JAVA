class Solution {
    static int firstTarget(int a[],int t){
        int l=0,r=a.length-1;
        int index=-1;
        while(l<=r){
            int mid=(l+r)/2;
            if(a[mid]>=t)
               r=mid-1;
            else
              l=mid+1;
            if(a[mid]==t)
              index=mid;  
        }
        return index;
    }
    static int lastTarget(int a[],int t){
        int l=0,r=a.length-1;
        int index=-1;
        while(l<=r){
            int mid=(l+r)/2;
            if(a[mid]<=t)
               l=mid+1;
            else
              r=mid-1;
            if(a[mid]==t)
              index=mid;  
        }
        return index;
    }
    public int[] searchRange(int[] nums, int target) {
        // binary search algorithm O(log n)
        int arr[]=new int[2];
        arr[0]=firstTarget(nums,target);
        arr[1]=lastTarget(nums,target);
        return arr;
    }
}
